name: Deploy Astro Site

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build Astro site
        run: npm run build

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            echo "
            version: '3'
            
            services:
              ${{ github.event.repository.name }}:
                image: ${{ vars.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
                labels:
                  - traefik.enable=true
                  - traefik.http.routers.${{ github.event.repository.name }}.rule=Host(\`${{ vars.DOMAIN }}\`) || Host(\`www.${{ vars.DOMAIN }}\`)
                  - traefik.http.routers.${{ github.event.repository.name }}.entrypoints=websecure
                  - traefik.http.routers.${{ github.event.repository.name }}.middlewares=cloudflare-ip-whitelist@file
                  - traefik.http.services.${{ github.event.repository.name }}.loadbalancer.server.port=80
                networks:
                  - web

            networks:
              web:
                external: true
            " > docker-compose.${{ github.event.repository.name }}.yml
            docker-compose -f docker-compose.${{ github.event.repository.name }}.yml up -d


# Make sure you have set the following in your GitHub repository:
# Secrets:
#   - DOCKERHUB_TOKEN
#   - SERVER_IP
#   - SERVER_USER
#   - SERVER_SSH_KEY (the entire private key, including BEGIN and END lines)
# Variables:
#   - DOCKER_USERNAME
#   - DOMAIN

# On your server, ensure that:
# 1. The public key corresponding to SERVER_SSH_KEY is in ~/.ssh/authorized_keys
# 2. The Docker network 'web' exists
# 3. Traefik is set up and running correctly
            
